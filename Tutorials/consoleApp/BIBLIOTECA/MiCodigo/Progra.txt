using  static  System.Math;

namespace  TelepromterConsole;

internal  class  Program{

    static  async  Task  Main(string[]  args){
    
        var  lines  =  ReadFrom("sampleQuotes.txt");
        
        foreach(var line in lines){  
        
            Console.WriteLine(line);
            if(!string.IsNullOrWhiteSpace(line)){
            
                var  pause  =  Task.Delay(200);
                pause.Wait();
            
            }
        
        }
        
        //await  ShowTeleprompter();
        await  RunTelePromptert();
    
    }
    
    static  IEnumerable<string> ReadFrom(string file){
    
        string?  line;
        var  lineLength  =  0;
        
        using(var  reader  =  File.OpenText(file)){
        
            while((line  =  reader.ReadLine())  !=  null){
            
                var words  =  line.Split(' ');
                foreach(var  word  in  words) { 
                
                    yield  return  word  +  " ";
                
                    lineLength  +=  word.Length  +1;
                    if(lineLength  >  70){
                    
                        yield  return  Environment.NewLine;
                        lineLength  =  0;
                    
                    }
                
                }
                //yield  return  Environment.NewLine;
            }
        
        }
    
    }
    
    private  static  async  Task  ShowTeleprompter(){
    
        var  words  =  ReadFrom("sampleQuotes.txt");
        
        foreach(var word in words){  
        
            Console.WriteLine(word);
            if(!string.IsNullOrWhiteSpace(word)){
            
                await Task.Delay(200);
            
            }
        
        }
        config.SetDone();
    }
    
    
    private  static  async  Task  GetInput(TelePrompterConfig  Config){
    
        //var  delay  =  200;
        Action  work  =  ()  =>{
        
            do{
            
                var  key  =  Console.ReadKey(true);
                if(key.KeyChar  ==  '>'){
                
                    //delay  -=  10;
                    config.UpdateDelay(-10);
                
                }  else  if(key.KeyChar  ==  '<'){
                
                    //delay  +=  10;
                    config.UpdateDelay(10);
                
                }  else  if(key.KeyChar  ==  'X'  ||  key.KeyChar  ==  'x'){
                
                    //break;
                    config.SetDone();
                
                }
            
            }while(/**true*/ !config.Done);
        
        };
        
        await  Task.Run(work);
    
    }
}

internal class  TelePrompterConfig{

    public  int  DelayInMilliseconds{get;  private  set;}  =  200;
    public  void  UpdateDelay(int  increment)  //  negative  to  speed  up
    {
        var  newDelay  =  Min(DelayInMilliseconds  +  increment,  1000);
        newDelay  =  Max(newDelay,  20);
        DelayInMilliseconds  =  newDelay;
    }
    public  bool  Done{get;  private  set;}
    public  void  SetDone(){
    
        Done  =  true;
    
    }
    
    private  static  async  Task  RunTeleprompter(){
    
        var  config  =  new  telePrompterConfig();
        
        var  displayTask  =  ShowTelePrompter(config);
        
        var  speedTask  =  GetInput(config);
        await  Task.WhenAny(displayTask, speedTask);
    }

}